syntax = "proto3";
import "google/protobuf/empty.proto";
option go_package = ".;proto";


service Order {
    //购物车
    rpc CartItemList(UserInfo) returns(CartItemListResponse); //获取用户的购物车信息
    rpc CreateCartItem(CartItemRequest) returns(ShopCartInfoResponse); //添加商品到购物车
    rpc UpdateCartItem(CartItemRequest) returns(google.protobuf.Empty); //修改购物车信息
    rpc DeleteCartItem(CartItemRequest) returns(google.protobuf.Empty); //删除购物车条目

    //订单
    rpc CreateOrder(OrderRequest) returns (OrderInfoResponse); //创建订单
    rpc OrderList(OrderFilterRequest) returns (OrderListResponse); // 订单列表
    rpc OrderDetail(OrderRequest) returns (OrderInfoDetailResponse); // 订单详情
    rpc UpdateOrderStatus(OrderStatus) returns (google.protobuf.Empty); // 修改订单状态
}

message UserInfo {
    int32 id = 1;
}

// 购物车返回信息
message ShopCartInfoResponse {
    int32 id = 1;
    int32 userId = 2;
    int32 goodsId = 3;
    int32 nums = 4;
    // checked 字段通常用于表示该商品是否被选中，尤其是在用户进行批量操作时
    bool checked = 5;
}

message CartItemListResponse {
    int32 total = 1;
    repeated ShopCartInfoResponse data = 2;
}

// 购物车请求，因为前端查购物车，还需要商品的这些信息，
// 微服务尽量不要重复调，所以做一个冗余
message CartItemRequest {
    int32 id = 1; // 这个是订单的id
    int32 userId = 2;
    int32 goodsId = 3;
    string goodsName = 4;
    string goodsImage = 5;
    float goodsPrice = 6;
    int32 nums = 7;
    bool checked = 8;
}

message OrderStatus {
    int32 id = 1;
    string orderSn = 2;
    string status = 3;
}

// 请求订单服务的请求信息
message OrderRequest {
    int32 id = 1;
    int32 userId = 2;
    string address = 3;
    string name = 4;
    string phone = 5;
    string post = 6;
}

// 请求订单列表，需要加入分页信息
message OrderFilterRequest {
    int32 userId = 1;
    int32 pages = 2;
    int32 pagePerNums = 3;
}

// 订单的信息
message OrderInfoResponse {
    int32 id = 1;
    int32 userId = 2;
    string orderSn = 3;  //订单号，后台逻辑生成的
    string payType = 4;
    string status = 5;
    string post = 6;
    float total = 7;
    string address = 8;
    string name = 9;
    string phone = 10;
    string addTime = 11;
}

message OrderItemResponse {
    int32 id = 1;
    int32 orderId = 2;
    int32 goodsId = 3;
    string goodsName = 4;
    string goodsImage = 5;
    float goodsPrice = 6;
    int32 nums = 7;
}

message OrderInfoDetailResponse {
    OrderInfoResponse orderInfo = 1;
    repeated OrderItemResponse goods = 2;
}

message OrderListResponse {
    int32 total = 1;
    repeated OrderInfoResponse data = 2;
}



